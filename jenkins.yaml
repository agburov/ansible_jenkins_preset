---
- hosts: target
  become: yes
  remote_user: ec2-user
  become_user: root

  vars:
    #Remove deprecation warning
    ansible_python_interpreter: auto_silent

  tasks:
  - name: Get IP4 public address
    ipify_facts:
    register: public_ip

  - name: Download Long Term Jenkins release
    get_url:
      url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
      dest: /etc/yum.repos.d/jenkins.repo

  - name: Import Jenkins key from url
    ansible.builtin.rpm_key:
      state: present
      key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

  - name: Yum lastest update
    yum:
      name: '*'
      state: latest

  - name: Install Java
    yum:
      name: java-1.8.0-openjdk-devel

      state: present

  - name: Install Jenkins
    yum:
      name: jenkins
      state: latest

  - name: Run a daemon-reload to pick up config changes
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Start Jenkins server
    ansible.builtin.systemd:
      name: jenkins
      state: started

  - name: Get first Jenkins password
    ansible.builtin.command: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: jenkins_first_pass
  - debug:
      msg:
        - 'Jenkins server ~> {{ ipify_public_ip }}:8080'
        - 'Temporary pass ~> {{ jenkins_first_pass.stdout }}'

  - name: Install Jenkins plugins
    jenkins_plugin:
      name: "{{ item }}"
      url_username: "admin"
      url_password: "{{ jenkins_first_pass.stdout }}"
      url: 'http://{{ ipify_public_ip }}:8080'
      timeout: 90
      state: latest
      with_dependencies: yes
    with_items:
      - docker-workflow
      - aws-credentials
      - amazon-ecr
      - blueocean
      - terraform

  - name: Initiate the Jenkins restart fact
    set_fact:
      jenkins_restart_required: yes

  - name: Restart Jenkins after installing the plugins
    service:
      name: jenkins
      state: restarted
    when: jenkins_restart_required

  - name: Waiting for Jenkins to start and entering a temporary password
    uri:
      url: 'http://{{ ipify_public_ip }}:8080'
      status_code: 403
      timeout: 1
    register: jenkins_service_status
    # Keep trying for 2 mins in 4 sec intervals
    retries: 30
    delay: 4
    until: >
       'status' in jenkins_service_status and
       jenkins_service_status['status'] == 403
    when: jenkins_restart_required
